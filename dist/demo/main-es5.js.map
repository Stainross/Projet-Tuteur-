{"version":3,"sources":["webpack:///src/app/accueil/accueil.component.html","webpack:///src/app/liste/liste.component.html","webpack:///src/app/accueil/hello.component.ts","webpack:///src/app/profil/profil.component.ts","webpack:///src/app/app.component.css","webpack:///src/app/profil/profil.component.css","webpack:///src/environments/environment.ts","webpack:///src/app/accueil/accueil.component.css","webpack:///src/app/accueil/accueil.component.ts","webpack:///src/app/liste/liste.component.ts","webpack:///src/app/top-bar/top-bar.component.css","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/profil/profil.component.html","webpack:///src/$_lazy_route_resource lazy namespace object","webpack:///src/app/profil/profil.utilisateur.model.ts","webpack:///src/app/top-bar/top-bar.component.ts","webpack:///src/app/top-bar/top-bar.component.html","webpack:///src/app/liste/liste.component.css","webpack:///src/app/accueil/accueil.product.model.ts","webpack:///src/main.ts"],"names":["HelloComponent","selector","template","ProfilComponent","http","utilisateur","get","responseType","toPromise","data","console","log","id","nom","prenom","email","mdp","Promise","resolve","then","value","environment","production","ConfigService","providedIn","AccueilComponent","httpClient","url","product","scanned","title","ngOnInit","scan","barcode","name","novaGroup","imageUrl","nutriScore","allergens","replace","setTimeout","init","inputStream","constraints","facingMode","area","top","right","left","bottom","decoder","readers","debug","drawBoundingBox","showFrequency","drawScanline","showPattern","err","errorMessage","start","onDetected","codeB","codeResult","code","setInformations","stop","getProductData","ListeComponent","test","productList","key","push","md5","AppComponent","connected","nativeElement","AppModule","imports","forRoot","path","component","declarations","providers","bootstrap","webpackEmptyAsyncContext","req","e","Error","keys","module","exports","Utilisateur","TopBarComponent","Product","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["export default \"<script src=\\\"https://cdn.rawgit.com/serratus/quaggaJS/0420d5e0/dist/quagga.min.js\\\"></script>\\r\\n<script src=\\\"node_modules/quagga/quagga.min.js\\\"></script>\\r\\n\\r\\n\\r\\n<div  id=\\\"interactive\\\" class=\\\"viewport\\\" *ngIf=\\\"scanned==false\\\">\\r\\n\\t<!-- QuaggaJS ici -->\\t\\r\\n</div>\\r\\n<div *ngIf=\\\"scanned\\\" id=\\\"box\\\">\\r\\n\\t<div id=\\\"score\\\">\\r\\n\\t\\t<h1>Ce produit est bon pour vous</h1>\\r\\n\\t\\t<h2>Allergènes: {{allergens}}</h2>\\r\\n\\t\\t<img class=\\\"label\\\" src={{novaGroup}} />\\r\\n\\t\\t<img class=\\\"label\\\" src={{nutriScore}} />\\r\\n\\t</div>\\r\\n\\t\\t<img [src]=\\\"imageUrl\\\" />\\r\\n\\t\\t<br /><button type=\\\"button\\\">Ajouter à la liste</button>\\r\\n\\t\\t<h2>{{name}}</h2>\\r\\n\\t\\t<p>Description du produit</p>\\r\\n\\t</div>\\r\\n\";","export default \"<p>test</p>\\r\\n<ul *ngFor=\\\"let product of productList\\\">\\r\\n    <li>Nom: {{product.name}} Allergènes: {{product.allergens}}</li>    \\r\\n</ul>\";","import { Component, Input } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"hello\",\r\n  template: `\r\n    <h1>Nom: {{ name }}</h1>\r\n    <p>Nova:{{ novaGroup }} Nutri:{{ nutriScore }}</p>\r\n    <img src=\"{{ imageUrl }}\" />\r\n  `,\r\n  styles: [\r\n    `\r\n      h1 {\r\n        font-family: Lato;\r\n      }\r\n    `\r\n  ]\r\n})\r\nexport class HelloComponent {\r\n  @Input() name: string;\r\n  @Input() novaGroup: string;\r\n  @Input() imageUrl: string;\r\n  @Input() nutriScore: string;\r\n}\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BddserviceService } from \"../bddservice.service\";\r\nimport { map } from 'rxjs/operators';\r\nimport { Utilisateur } from './profil.utilisateur.model';\r\n@Component({\r\n  selector: \"app-profil\",\r\n  templateUrl: \"./profil.component.html\",\r\n  styleUrls: [\"./profil.component.css\"]\r\n})\r\nexport class ProfilComponent implements OnInit {\r\n  utilisateur=new Utilisateur();\r\n  nom:string;\r\n  prenom:string;\r\n  email:string;\r\n  constructor(private http:HttpClient) {}\r\n\r\n  async ngOnInit() {\r\n    const data = await this.http.get('https://us-central1-projet-tuteure-42fc0.cloudfunctions.net/app/api/users', {\r\n        responseType: \"json\"\r\n      }).toPromise();\r\n    console.log(data);\r\n    (this.utilisateur = {\r\n      id: data[\"data\"][0][\"id\"],\r\n      nom: data[\"data\"][0][\"nom\"],\r\n      prenom: data[\"data\"][0][\"prenom\"],\r\n      email: data[\"data\"][0][\"email\"],\r\n      mdp: data[\"data\"][0][\"mdp\"]\r\n    });\r\n    Promise.resolve(this.utilisateur).then(value => {\r\n      this.nom=value.nom;\r\n      this.prenom=value.prenom;\r\n      this.email=value.email;\r\n\r\n    })\r\n\r\n\r\n  }\r\n}\r\n","export default \"p {\\r\\n  font-family: Lato;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0FBQ25CIiwiZmlsZSI6ImFwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsicCB7XHJcbiAgZm9udC1mYW1pbHk6IExhdG87XHJcbn0iXX0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJwcm9maWwuY29tcG9uZW50LmNzcyJ9 */\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","export default \"img {\\r\\n  height: 150px;\\r\\n  width: auto;\\r\\n}\\r\\n.label {\\r\\n  height: 50px;\\r\\n  margin-bottom: 0px;\\r\\n  margin-top: 0px;\\r\\n  margin-left: 20px;\\r\\n  margin-right: 20px;\\r\\n}\\r\\np {\\r\\n  width: 140px;\\r\\n  text-align: center;\\r\\n  display: inline-block;\\r\\n}\\r\\n#box {\\r\\n  width: 100%;\\r\\n  text-align: center;\\r\\n  color: blue;\\r\\n}\\r\\n#score {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFjY3VlaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQWE7RUFDYixXQUFXO0FBQ2I7QUFDQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixrQkFBa0I7QUFDcEI7QUFDQTtFQUNFLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIscUJBQXFCO0FBQ3ZCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjtBQUNBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6ImFjY3VlaWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImltZyB7XHJcbiAgaGVpZ2h0OiAxNTBweDtcclxuICB3aWR0aDogYXV0bztcclxufVxyXG4ubGFiZWwge1xyXG4gIGhlaWdodDogNTBweDtcclxuICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xyXG4gIG1hcmdpbi1yaWdodDogMjBweDtcclxufVxyXG5wIHtcclxuICB3aWR0aDogMTQwcHg7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG4jYm94IHtcclxuICB3aWR0aDogMTAwJTtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuI3Njb3JlIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\";","import { AfterViewInit, Component, OnInit } from \"@angular/core\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Product } from \"./accueil.product.model\";\r\nimport Quagga from \"quagga\";\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class ConfigService {\r\n  constructor(private http: HttpClient) {}\r\n}\r\n\r\n@Component({\r\n  selector: \"app-accueil\",\r\n  templateUrl: \"./accueil.component.html\",\r\n  styleUrls: [\"./accueil.component.css\"]\r\n})\r\nexport class AccueilComponent implements OnInit{\r\n  url = \"https://world.openfoodfacts.org/api/v0/product/\";\r\n  product = new Product();\r\n  name: \"\";\r\n  public scanned=false;\r\n  novaGroup: \"\";\r\n  imageUrl: \"\";\r\n  nutriScore: \"\";\r\n  allergens: \"\";\r\n  title = \"app-projettut\";\r\n  errorMessage: string;  \r\n  constructor(private httpClient: HttpClient) {\r\n    this.ngOnInit();\r\n  }\r\n  ngOnInit(): void {\r\n    this.scan();\r\n  }\r\n  async getProductData(barcode: string) {\r\n    console.log(barcode);\r\n    const data = await this.httpClient\r\n      .get(this.url + barcode + \".json\", {\r\n        responseType: \"json\"\r\n      })\r\n      .toPromise();\r\n    return (this.product = {\r\n      name: data[\"product\"][\"product_name\"],\r\n      novaGroup: data[\"product\"][\"nova_group\"],\r\n      imageUrl: data[\"product\"][\"image_small_url\"],\r\n      nutriScore: data[\"product\"][\"nutriscore_grade\"],\r\n      allergens: data[\"product\"][\"allergens\"].replace(/en:/gi, \"\")\r\n    });\r\n  }\r\n  scan(){\r\n    setTimeout(()=>{Quagga.init({\r\n      inputStream: {\r\n        constraints: {\r\n          facingMode: 'environment' // restrict camera type\r\n        },\r\n        area: { // defines rectangle of the detection\r\n          top: '40%',    // top offset\r\n          right: '0%',  // right offset\r\n          left: '0%',   // left offset\r\n          bottom: '40%'  // bottom offset\r\n        },\r\n      },\r\n      decoder: {\r\n        readers: ['ean_reader'], // restrict code types\r\n        debug: {\r\n          drawBoundingBox: true,\r\n          showFrequency: true,\r\n          drawScanline: true,\r\n          showPattern: true,\r\n          //showCanvas: true,\r\n          //showPatches: true,\r\n          //showFoundPatches: true,\r\n          /*showSkeleton: true,\r\n          showLabels: true,\r\n          showPatchLabels: true,\r\n          showRemainingPatchLabels: true,\r\n          boxFromPatches: {\r\n            showTransformed: true,\r\n            showTransformedBox: true,\r\n            showBB: true\r\n          }*/\r\n        }\r\n      },\r\n      },\r\n      (err: any) => {\r\n        if (err) {\r\n          this.errorMessage = `Probleme initialisation QuaggaJS : ${err}`;\r\n          console.log(this.errorMessage);\r\n        } else {\r\n          console.log(\"oui\");\r\n          Quagga.start();\r\n          Quagga.onDetected((codeB) => {\r\n              this.scanned=true;\r\n              console.log(codeB.codeResult.code);\r\n              this.setInformations(codeB.codeResult.code);\r\n              Quagga.stop();\r\n    \r\n          })\r\n        }\r\n      });\r\n    },1000);\r\n  }\r\n  setInformations(barcode: string) {\r\n    console.log(\"bien entré\");\r\n    console.log(barcode);\r\n    this.scanned=true;\r\n    Promise.resolve(this.getProductData(barcode)).then(value => {\r\n      this.name = value.name;\r\n      switch (value.novaGroup) {\r\n        case 1: {\r\n          value.novaGroup = \"https://i.postimg.cc/sMLHBcT9/nova1.png\";\r\n          break;\r\n        }\r\n        case 2: {\r\n          value.novaGroup = \"https://i.postimg.cc/XrqD7hkY/nova2.png\";\r\n          break;\r\n        }\r\n        case 3: {\r\n          value.novaGroup = \"https://i.postimg.cc/TpC4xGms/nova3.png\";\r\n          break;\r\n        }\r\n        case 4: {\r\n          value.novaGroup = \"https://i.postimg.cc/N5gzZLyT/nova4.png\";\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n      switch (value.nutriScore) {\r\n        case \"a\": {\r\n          value.nutriScore = \"https://i.postimg.cc/s1NvBGp9/nutriA.png\";\r\n          break;\r\n        }\r\n        case \"b\": {\r\n          value.nutriScore = \"https://i.postimg.cc/gnLr3cs9/nutriB.png\";\r\n          break;\r\n        }\r\n        case \"c\": {\r\n          value.nutriScore = \"https://i.postimg.cc/vDB4Ht6Z/nutriC.png\";\r\n          break;\r\n        }\r\n        case \"d\": {\r\n          value.nutriScore = \"https://i.postimg.cc/QKHC4jrT/nutriD.png\";\r\n          break;\r\n        }\r\n        case \"e\": {\r\n          value.nutriScore = \"https://i.postimg.cc/cg1r3Q9T/nutriE.png\";\r\n          break;\r\n        }\r\n        default: {\r\n          break;\r\n        }\r\n      }\r\n      this.imageUrl = value.imageUrl;\r\n      this.nutriScore = value.nutriScore;\r\n      this.allergens = value.allergens;\r\n      this.novaGroup = value.novaGroup;\r\n    });\r\n\r\n  }\r\n}\r\n\r\n","import { Component, Input, OnInit } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Product } from \"../accueil/accueil.product.model\";\r\nimport {AccueilComponent} from \"../accueil/accueil.component\";\r\n@Component({\r\n    selector: \"app-liste\",\r\n    templateUrl: \"./liste.component.html\",\r\n    styleUrls: [\"./liste.component.css\"]\r\n})\r\nexport class ListeComponent implements OnInit{\r\n    product:Product;\r\n    productList:Product[];\r\n    constructor(private http: HttpClient,private test:AccueilComponent){}\r\n    async ngOnInit(): Promise<void> {\r\n      this.productList=[];\r\n     const data = await this.http.get('https://us-central1-projet-tuteure-42fc0.cloudfunctions.net/app/api/listes', {\r\n        responseType: \"json\"\r\n      }).toPromise();\r\n     for(let key in data['data']){\r\n        this.test.getProductData(data['data'][key]['barcode']);\r\n        this.productList.push(await Promise.resolve(this.test.getProductData(data['data'][key]['barcode'])));\r\n     }\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0b3AtYmFyLmNvbXBvbmVudC5jc3MifQ== */\";","import { Component, ElementRef, ViewChild } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nvar md5 = require('md5')\r\n@Component({\r\n  selector: \"my-app\",\r\n  templateUrl: \"./app.component.html\",\r\n  styleUrls: [\"./app.component.css\"]\r\n})\r\nexport class AppComponent {\r\n  @ViewChild('email') email: ElementRef;\r\n  @ViewChild('mdp') mdp: ElementRef;\r\n  connected=false;\r\n  constructor(private http: HttpClient){}\r\n  async onSubmit(){\r\n    console.log(\"connexion\");\r\n    const data = await this.http.get('https://us-central1-projet-tuteure-42fc0.cloudfunctions.net/app/api/users', {\r\n        responseType: \"json\"\r\n      }).toPromise();\r\n      \r\n     for(let key in data['data']){\r\n        if(md5(this.mdp.nativeElement.value)==data[\"data\"][key][\"mdp\"] && this.email.nativeElement.value==data[\"data\"][key][\"email\"]){\r\n          console.log(\"Vous êtes connecté\");\r\n          this.connected=true;\r\n        }\r\n        else{\r\n          console.log(\"Identifiant ou mot de passe incorrect\")\r\n        }\r\n      }\r\n\r\n\r\n    \r\n  }\r\n}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","export default \"\\r\\n<div class=\\\"connexion\\\" *ngIf=\\\"connected==false\\\">\\r\\n\\t<p>admin@example.com</p><p>admin123456</p>\\r\\n\\t<label>Mail</label>\\r\\n\\t<input type=\\\"text\\\" #email/>\\r\\n\\t<label>Mot de passe</label>\\r\\n\\t<input type=\\\"text\\\" #mdp/>\\r\\n\\t<button (click)=\\\"onSubmit()\\\">Se connecter</button>\\r\\n</div>\\r\\n<app-top-bar *ngIf=\\\"connected\\\"></app-top-bar>\\r\\n<div class=\\\"container\\\" *ngIf=\\\"connected\\\">\\r\\n\\t<router-outlet></router-outlet>\\r\\n</div>\\r\\n\\r\\n<!-- \\r\\nCopyright Google LLC. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at https://angular.io/license\\r\\n-->\\r\\n\";","import { NgModule } from \"@angular/core\";\r\nimport { BrowserModule } from \"@angular/platform-browser\";\r\nimport { RouterModule } from \"@angular/router\";\r\nimport { HttpClientModule } from \"@angular/common/http\";\r\nimport { ReactiveFormsModule } from \"@angular/forms\";\r\nimport { AppComponent } from \"./app.component\";\r\nimport { TopBarComponent } from \"./top-bar/top-bar.component\";\r\nimport { AccueilComponent } from \"./accueil/accueil.component\";\r\nimport { ProfilComponent } from \"./profil/profil.component\";\r\nimport { HelloComponent } from \"./accueil/hello.component\";\r\nimport { ListeComponent } from \"./liste/liste.component\";\r\n//import Quagga from \"quagga/type-definitions/quagga\";\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot([\r\n      { path: \"\", component: AccueilComponent },\r\n      { path: \"profil\", component: ProfilComponent },\r\n      { path: \"liste\", component: ListeComponent }\r\n    ])\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    TopBarComponent,\r\n    //ProductListComponent,\r\n    //ProductAlertsComponent,\r\n    ListeComponent,\r\n    AccueilComponent,\r\n    ProfilComponent,\r\n    HelloComponent\r\n  ],\r\n  providers:[\r\n    AccueilComponent\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","export default \"<script src=\\\"../server.js\\\"></script>\\r\\n<h2>{{nom}}</h2>\\r\\n<button>Nom</button><br/>\\r\\n<h2>{{prenom}}</h2>\\r\\n<button>Prénom</button><br/>\\r\\n<h2>{{email}}</h2>\\r\\n<button>Mail</button><br/>\\r\\n<button>Mot de Passe</button><br/>\\r\\n<style>\\r\\n\\tbutton {\\r\\n\\t\\tmargin-top: 10px;\\r\\n\\t}\\r\\n</style>\";","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"crnd\";","export class Utilisateur {\r\n    id: string;\r\n    nom: string;\r\n    prenom: string;\r\n    email: string;\r\n    mdp: string;\r\n  }","import { Component, OnInit } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"app-top-bar\",\r\n  templateUrl: \"./top-bar.component.html\",\r\n  styleUrls: [\"./top-bar.component.css\"]\r\n})\r\nexport class TopBarComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n","export default \"<ul>\\r\\n\\t<li>\\r\\n\\t\\t<a [routerLink]=\\\"['/']\\\">\\r\\n\\r\\n\\t\\t\\t<div class=\\\"logo-image\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"https://i.postimg.cc/fJzC2XGn/accueil.png\\\" />\\r\\n      </div>\\r\\n\\t\\t</a>\\r\\n\\t</li>\\r\\n\\t<li>\\r\\n\\t\\t<a [routerLink]=\\\"['profil']\\\">\\r\\n\\t\\t\\t<div class=\\\"logo-image\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"https://i.postimg.cc/P54GyQgx/profil.png\\\" />\\r\\n      </div>\\r\\n\\t\\t</a>\\r\\n\\t</li>\\r\\n\\t<li>\\r\\n\\t\\t<a [routerLink]=\\\"['liste']\\\">\\r\\n\\t\\t\\t<div class=\\\"logo-image\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"https://i.postimg.cc/9rLpv024/liste.png\\\" />\\r\\n      </div>\\r\\n\\t\\t</a>\\r\\n\\t</li>\\r\\n\\t<li>\\r\\n\\t\\t<a [routerLink]=\\\"['/']\\\">\\r\\n\\t\\t\\t<div class=\\\"logo-image\\\">\\r\\n\\t\\t\\t\\t<img src=\\\"https://i.postimg.cc/rDzJcTyf/famille.png\\\" />\\r\\n      </div>\\r\\n\\t\\t</a>\\r\\n\\t</li>\\r\\n</ul>\\r\\n\\r\\n<style>\\r\\n\\tli {\\r\\n\\t\\tdisplay: inline-block;\\r\\n\\t\\tpadding-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\th2 {\\r\\n\\t\\tcolor: white;\\r\\n\\t}\\r\\n</style>\\r\\n\\r\\n<!-- \\r\\nCopyright Google LLC. All Rights Reserved.\\r\\nUse of this source code is governed by an MIT-style license that\\r\\ncan be found in the LICENSE file at https://angular.io/license\\r\\n-->\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsaXN0ZS5jb21wb25lbnQuY3NzIn0= */\";","export class Product {\r\n  novaGroup: string;\r\n  name: string;\r\n  imageUrl: string;\r\n  nutriScore: string;\r\n  allergens: string;\r\n}\r\n","import { enableProdMode } from \"@angular/core\";\r\nimport { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\r\nimport { environment } from \"./environments/environment\";\r\n\r\nimport { AppModule } from \"./app/app.module\";\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule);\r\n\r\n/*\r\nCopyright Google LLC. All Rights Reserved.\r\nUse of this source code is governed by an MIT-style license that\r\ncan be found in the LICENSE file at https://angular.io/license\r\n*/\r\n"]}